{"version":3,"file":"static/js/842.3642f0e3.chunk.js","mappings":"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","sources":["components/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/servisApi.js","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner'\n\nconst Loader = () => (\n    <div><ThreeDots /></div>\n)\n\nexport default Loader;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  row-gap: 20px;\n  column-gap: 8px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 32px) / 5);\n`;\n\nexport const LinkItem = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nexport const Poster = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.div`\n  padding: 12px 4px;\n`;","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport defaultPicture from '../../images/default-movie.jpg';\nimport { List, Item, LinkItem, Poster, MovieTitle } from './MovieList.styled';\n\nconst MovieList = ({ items }) => {\n  const location = useLocation();\n  return (\n    <List>{items.map(({ id, poster_path, title }) => (\n      <Item key={id}>\n      <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n        <Poster width={250} src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : defaultPicture} alt={title} />\n        <MovieTitle>{title}</MovieTitle>\n      </LinkItem>\n    </Item>\n  ))} </List>\n);\n};\n\nMovieList.propTypes = {\n  items:  PropTypes.arrayOf(\n          PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          title: PropTypes.string.isRequired,\n  })),\n}\n\nexport default MovieList;","import axios from 'axios'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =  '0f09f0e29eb26a1e28b4809ac59dbd60';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`);\n    return response;\n    };\n\nexport async function  getMoviesID(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&page=1`);\n    return response;\n};\n\nexport async function getSearchFilms(searchFilm) {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchFilm}&page=1`);\n    return response;\n};\n\nexport async function getActors(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response;\n};\n\nexport async function getReviews(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: solid 1px #e0e0e0;\n  border-radius: 8px;\n  overflow: hidden;\n  margin: auto;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Label = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n`;","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { IoSearchOutline } from 'react-icons/io5';\nimport { SearchForm, Button, Label, Input } from \"./Form.styled\";\n\nconst Form = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryP = searchParams.get('query');\n\n  const handlSubmit = (evt) => {\n    evt.preventDefault();\n\n    if (queryP.trim() === '') {\n      toast.warn(\"Please, input something!\")\n      return\n    }\n      onSubmit(queryP.trim())\n      setQuery('');\n  }\n\n  const handleChange = evt => {\n    setSearchParams({query: evt.target.value})\n    const { value } = evt.currentTarget;\n    setQuery(value);\n  }\n   \n  return (\n    <SearchForm onSubmit={handlSubmit}>\n      <Button type=\"submit\">\n        <IoSearchOutline size={24} />\n        <Label>Search</Label>\n      </Button>\n        <Input\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n    </SearchForm>      \n  );\n};\n\nForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Form;","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useMount } from 'react-use';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getSearchFilms } from \"../components/servisApi\";\nimport Loader from '../components/Loader';\nimport  MovieList  from \"../components/MovieList/MovieList\";\nimport Form from \"components/Form/Form\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchFilm = searchParams.get(\"query\") ?? '';\n  const [searchMovies, setSearchMovies] = useState('');\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoadings] = useState(false);\n  const [error, setError] = useState('');\n\n  const handlSubmit = (query) => {\n    const nextParams = query !== \"\" ? { query } : {};\n    setSearchParams(nextParams)\n    setSearchMovies(query)\n    setError('')\n  }\n  \n  useMount(() => {\n    async function getFilm() {\n      try {\n        const searchInfo = await getSearchFilms(searchFilm)\n          \n        if (searchInfo.data.results.length !== 0) {\n          setItems(searchInfo.data.results)\n          setIsLoadings(false) \n          return \n        }\n\n        setIsLoadings(false)\n        throw new Error(\"Sory, no result!\");\n      } catch (error) {\n        setIsLoadings(false)\n        console.log(error);\n      }\n    }\n\n    if (searchFilm) {\n      setIsLoadings(true)\n      getFilm()\n    }\n  })\n    \n  useEffect(() => {\n    async function getFilm() {\n      try {\n        const searchInfo = await getSearchFilms(searchMovies)\n        \n        if (searchInfo.data.results.length !== 0) {\n          setItems(searchInfo.data.results)\n          setIsLoadings(false)\n          return \n        }\n\n        setIsLoadings(false)\n        setItems([])\n        throw new Error(\"Sory, no result!\");\n      } catch (error) {\n        setIsLoadings(false)\n        setError(error)\n        setItems([])\n        console.log(error);\n      }\n    }\n\n    if (searchMovies==='') {\n      return\n    }\n\n    setIsLoadings(true)\n    getFilm()      \n  }, [searchMovies])\n\n  return (\n    <main>\n      <Form onSubmit={handlSubmit}></Form>\n      <ToastContainer autoClose={3000} />\n      {isLoading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      <MovieList items={items}></MovieList>\n    </main>\n  );\n}\n\nexport default Movies;"],"names":["List","styled","Item","LinkItem","NavLink","Poster","MovieTitle","items","location","useLocation","map","id","poster_path","title","to","state","from","width","src","defaultPicture","alt","BASE_URL","API_KEY","getTrendingMovies","axios","response","getMoviesID","movieId","getSearchFilms","searchFilm","getActors","getReviews","SearchForm","Button","Label","Input","onSubmit","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","queryP","get","evt","preventDefault","trim","toast","type","size","value","onChange","target","currentTarget","autoComplete","autoFocus","placeholder","searchMovies","setSearchMovies","setItems","isLoading","setIsLoadings","error","setError","useMount","searchInfo","data","results","length","Error","console","log","getFilm","useEffect","autoClose","Loader","message","MovieList"],"sourceRoot":""}