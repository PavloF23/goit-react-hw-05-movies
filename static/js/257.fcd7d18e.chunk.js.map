{"version":3,"file":"static/js/257.fcd7d18e.chunk.js","mappings":"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","sources":["components/servisApi.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =  '0f09f0e29eb26a1e28b4809ac59dbd60';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`);\n    return response;\n    };\n\nexport async function  getMoviesID(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&page=1`);\n    return response;\n};\n\nexport async function getSearchFilms(searchFilm) {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchFilm}&page=1`);\n    return response;\n};\n\nexport async function getActors(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response;\n};\n\nexport async function getReviews(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response;\n};\n","import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const Main = styled.main `\n    padding: 0 20px;\n`\n\nexport const ButtonBack = styled(Link) `\n    display: flex;\n    gap: 10px;\n    width: 120px;\n    align-items: center;\n    padding: 4px 8px;\n    border-radius: 5px;\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n    margin-bottom: 20px;\n\n    :hover {\n        color: white;\n        background-color: orange;\n    }\n\n    p {\n        margin: 0;\n    }\n`\n\nexport const FilmInfo = styled.div `\n    display: flex;\n    gap: 20px;\n    padding-bottom: 10px;\n    border-bottom: 1px solid black;\n\n    div{\n        width: 600px;\n    }\n`\n\nexport const Title = styled.p `\n    margin: 0;\n    font-weight: 700;\n`\n\nexport const Description = styled.p `\n    margin: 0;\n    margin-bottom: 20px\n`\n\nexport const List = styled.ul `\n    display: flex;\n    gap: 10px;\n    padding: 0;\n    list-style: none;\n\n`\n\nexport const LinkBtn = styled(Link) `\n\n    color: black;\n    font-weight: 700;\n    padding: 4px 12px;\n    border-radius: 5px;\n\n    :hover {\n        color: blue;\n    }\n`","import { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { useState, Suspense } from \"react\";\n// import { useRef } from \"react\";\nimport { useEffect } from \"react\";\n// import { useMount } from 'react-use';\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport { Main, ButtonBack, FilmInfo, Title, Description, List, LinkBtn } from './MovieDetails.styled'\nimport { getMoviesID } from \"../../components/servisApi\";\nimport defaultPicture from '../../images/default-movie.jpg';\n\nconst MovieInfo = () => {\n  const { movieId } = useParams();\n  const location = useLocation();  \n  const [filmId, setFilmId] = useState('');\n  const [genre, setGenre] = useState([]);\n  const [date, setDate] = useState('');\n  // const [loc, setLoc] = useState('');\n  // const locRef = useRef(location.stete?.from ?? '/');\n  const locRef = location.stete?.from ?? '/';\n   \n  // useMount(() => {\n    useEffect(() => {\n    async function getFilm() {\n      try {\n        const filmInfo = await getMoviesID(movieId)\n        const genres = []\n        filmInfo.data.genres.map(genre => genres.push(' ' + genre.name))\n        \n        if (!filmInfo.data) {\n          throw new Error(\"Sory, no result!\")\n        }\n          \n        setFilmId(filmInfo.data)\n        setGenre(genres.toString().split('').slice(1).join(''))\n        setDate(filmInfo.data.release_date.split('-')[0])\n          \n      } catch (error) {\n        console.log(error);\n      }\n    }\n    \n    // setLoc(location.state?.from ?? \"/\")\n    getFilm()    \n    }\n    , [movieId]\n    )\n    \n  return (\n    <Main>\n      {/* <ButtonBack to={locRef.current}> */}\n      {/* <ButtonBack to={loc}> */}\n      <ButtonBack to={locRef}>\n        <AiFillCaretLeft />\n        <p>Come Back</p>\n      </ButtonBack>\n      {filmId && <FilmInfo>\n        <img\n            width={250} \n            src={filmId.poster_path\n                    ? `https://image.tmdb.org/t/p/w500${filmId.poster_path}`\n                    :  defaultPicture}\n            alt={filmId.name}\n          />\n        <div>\n          <h2>{filmId.original_title} ({date})</h2>\n          <Title>Overview</Title>\n          <Description>{filmId.overview}</Description>\n          <Title>Genres</Title>\n          <Description>{ genre }</Description>\n        </div>\n      </FilmInfo>}\n      <div>\n        <p>Additional information</p>\n        <List>\n          <li>\n            <LinkBtn to='cast' state={{ from: locRef }} filmid={movieId}>Cast</LinkBtn>\n          </li>\n          <li>\n            <LinkBtn to=\"reviews\" filmid={movieId}>Reviews</LinkBtn>\n          </li>\n        </List>\n      </div>\n      <Suspense >\n        <Outlet/>\n      </Suspense>\n    </Main>\n  );\n};\n\nexport default MovieInfo;"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","response","getMoviesID","movieId","getSearchFilms","searchFilm","getActors","getReviews","Main","styled","ButtonBack","Link","FilmInfo","Title","Description","List","LinkBtn","useParams","location","useLocation","useState","filmId","setFilmId","genre","setGenre","date","setDate","locRef","stete","from","useEffect","filmInfo","genres","data","map","push","name","Error","toString","split","slice","join","release_date","console","log","getFilm","to","width","src","poster_path","defaultPicture","alt","original_title","overview","state","filmid","Suspense"],"sourceRoot":""}