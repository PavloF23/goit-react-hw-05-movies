{"version":3,"file":"static/js/194.75e28f9f.chunk.js","mappings":"mTAEMA,EAAW,+BACXC,EAAW,mCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,EAApD,YADM,cACvBG,EADuB,yBAEtBA,GAFsB,2CAAH,qDAKvB,SAAgBC,EAAvB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACoBH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BM,EAA/B,oBAAkDL,EAAlD,YADpB,cACGG,EADH,yBAEIA,GAFJ,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,kBAA+DO,EAA/D,WADpB,cACGJ,EADH,yBAEIA,GAFJ,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,uFACoBH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BM,EAA/B,4BAA0DL,IAD9E,cACGG,EADH,yBAEIA,GAFJ,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,uFACoBH,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BM,EAA/B,4BAA0DL,IAD9E,cACGG,EADH,yBAEIA,GAFJ,kE,0LCtBDO,EAAOC,EAAAA,GAAAA,GAAH,gIAQJC,EAAWD,EAAAA,GAAAA,GAAH,6GAMRE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qPAUJI,EAASJ,EAAAA,GAAAA,IAAH,gEAKNK,EAAYL,EAAAA,GAAAA,IAAH,8C,mBC3BFM,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,UACGQ,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACT,SAACZ,EAAD,WACE,UAACC,EAAD,CAAMY,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACJ,EAAD,CACEa,IACEL,EAAW,yCAC2BA,GAClCM,EAENC,IAAKN,KAEP,SAACR,EAAD,WACE,uBAAIQ,UAXKF,EADN,KAmBhB,EC4BYS,EAAO,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,IAAS,WAAM,wCACb,8GAE4BlC,EAAAA,EAAAA,MAF5B,WAEUmC,EAFV,QAGkBC,KAAKC,QAAQC,OAH/B,sBAIY,IAAIC,MAAM,mBAJtB,OAMIN,EAASE,EAASC,KAAKC,SAN3B,gDAQIG,QAAQC,IAAR,MARJ,0DADa,uBAAC,WAAD,wBAYbC,EACD,KAGC,0BACGV,EAAMM,SAAU,SAACtB,EAAD,CAAWC,MAAOe,KAGxC,C","sources":["components/servisApi.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =  '0f09f0e29eb26a1e28b4809ac59dbd60';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`);\n    return response;\n    };\n\nexport async function  getMoviesID(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&page=1`);\n    return response;\n};\n\nexport async function getSearchFilms(searchFilm) {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchFilm}page=1`);\n    return response;\n};\n\nexport async function getActors(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response;\n};\n\nexport async function getReviews(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  row-gap: 20px;\n  column-gap: 8px;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 32px) / 5);\n`;\n\nconst Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nconst Poster = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nconst MovieInfo = styled.div`\n  padding: 12px 4px;\n`;\n\nexport { List, ListItem, Item, Poster, MovieInfo };","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, ListItem, Item, Poster, MovieInfo } from './MovieList.styled';\nimport defaultPicture from '../../images/default-movie.jpg';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, poster_path, title }) => (\n        <ListItem key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <MovieInfo>\n              <p>{title}</p>\n            </MovieInfo>\n          </Item>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// import { useState, useEffect } from 'react';\n// import { getTrendingMovies } from '../../components/servisApi';\n// import { MovieList } from 'components/MovieList/MovieList';\n// import { Section, Container, Heading } from './Home.styled';\n// import { Notification } from '../../components/Notification/Notification';\n// import { Loader } from '../../components/Loader';\n\n// const Status = {\n//   PENDING: 'pending',\n//   REJECTED: 'rejected',\n//   RESOLVED: 'resolved',\n// };\n\n// export const Home = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [status, setStatus] = useState(Status.PENDING);\n\n//   useEffect(() => {\n//     getTrendingMovies()\n//       .then(({ results }) => {\n//         if (!results.length) {\n//           setStatus(Status.REJECTED);\n//           setError(\n//             \"Oops, something went wrong... We can't load trending movies ðŸ˜¥\"\n//           );\n//           return;\n//         }\n//         setMovies(results);\n//         setStatus(Status.RESOLVED);\n//       })\n//       .catch(error => {\n//         setError(error);\n//         setStatus(Status.REJECTED);\n//       });\n//   }, []);\n\n//   return (\n//     <main>\n//       <Section>\n//         <Container>\n//           <Heading>Trending today</Heading>\n//           {status === Status.PENDING && <Loader />}\n//           {status === Status.REJECTED && <Notification message={error} />}\n//           {status === Status.RESOLVED && <MovieList items={movies} />}\n//         </Container>\n//       </Section>\n//     </main>\n//   );\n// };\n\nimport { useState } from \"react\";\nimport { useMount } from 'react-use';\nimport {  getTrendingMovies } from \"../../components/servisApi\";\nimport { MovieList }  from \"../../components/MovieList/MovieList\";\n\n\nexport const Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useMount(() => {\n    async function getFilms() {\n      try {\n        const listFilm = await  getTrendingMovies()        \n        if (!listFilm.data.results.length) {\n          throw new Error(\"Sory, try later\");\n        }       \n        setFilms(listFilm.data.results)          \n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilms()    \n  })\n\n  return (\n    <main>\n      {films.length && <MovieList items={films}></MovieList>}\n    </main>\n  );\n};\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","response","getMoviesID","movieId","getSearchFilms","searchFilm","getActors","getReviews","List","styled","ListItem","Item","NavLink","Poster","MovieInfo","MovieList","items","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPicture","alt","Home","useState","films","setFilms","useMount","listFilm","data","results","length","Error","console","log","getFilms"],"sourceRoot":""}