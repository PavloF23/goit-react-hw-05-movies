{"version":3,"file":"static/js/893.128affe1.chunk.js","mappings":"0PAKaA,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAJV,+BAIU,uCAHV,qCAEgB,cACvBC,EADuB,yBAEtBA,GAFsB,2CAAH,qD,mCCFxBC,EAAOC,EAAAA,GAAAA,GAAH,gIAQJC,EAAWD,EAAAA,GAAAA,GAAH,6GAMRE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qPAUJI,EAASJ,EAAAA,GAAAA,IAAH,gEAKNK,EAAYL,EAAAA,GAAAA,IAAH,8C,kBC3BFM,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,UACGQ,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACT,SAACZ,EAAD,WACE,UAACC,EAAD,CAAMY,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACJ,EAAD,CACEa,IACEL,EAAW,yCAC2BA,GAClCM,EAENC,IAAKN,KAEP,SAACR,EAAD,WACE,uBAAIQ,UAXKF,EADN,KAmBhB,EC3BYS,EAAUpB,EAAAA,GAAAA,QAAH,8FAMPqB,EAAYrB,EAAAA,GAAAA,IAAH,sIAQTsB,EAAUtB,EAAAA,GAAAA,GAAH,oECdPuB,EAAe,WAC1B,OAAO,gCACR,ECGKC,EACK,UADLA,EAEM,WAFNA,EAGM,WAGCC,EAAO,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAASF,GAArC,eAAOO,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRrC,IACGsC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACP,IAAKA,EAAQC,OAKX,OAJAJ,EAAUR,QACVM,EACE,4EAIJF,EAAUO,GACVH,EAAUR,EACX,IACAa,OAAM,SAAAR,GACLC,EAASD,GACTG,EAAUR,EACX,GACJ,GAAE,KAGD,2BACE,SAACJ,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,6BAECS,IAAWP,IAAmB,SAACD,EAAD,CAAce,QAAST,IACrDE,IAAWP,IAAmB,SAAClB,EAAD,CAAWC,MAAOoB,UAK1D,C","sources":["components/servisApi.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","components/Notification/Notification.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =  '0f09f0e29eb26a1e28b4809ac59dbd60';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return response;\n    };","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  row-gap: 20px;\n  column-gap: 8px;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 32px) / 5);\n`;\n\nconst Item = styled(NavLink)`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    transform: scale(1.1);\n    color: #ec9706;\n  }\n`;\n\nconst Poster = styled.img`\n  height: 365px;\n  object-fit: cover;\n`;\n\nconst MovieInfo = styled.div`\n  padding: 12px 4px;\n`;\n\nexport { List, ListItem, Item, Poster, MovieInfo };","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, ListItem, Item, Poster, MovieInfo } from './MovieList.styled';\nimport defaultPicture from '../../images/default-movie.jpg';\n\nexport const MovieList = ({ items }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {items.map(({ id, poster_path, title }) => (\n        <ListItem key={id}>\n          <Item to={`/movies/${id}`} state={{ from: location }}>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultPicture\n              }\n              alt={title}\n            />\n            <MovieInfo>\n              <p>{title}</p>\n            </MovieInfo>\n          </Item>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 36px;\n  padding-bottom: 36px;\n  text-align: center;\n`;\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1280px;\n`;\n\nexport const Heading = styled.h1`\n  margin-bottom: 32px;\n  font-size: 56px;\n`;","// import PropTypes from 'prop-types';\n\nexport const Notification = () => {\n  return <p>ERROR</p>;\n};\n\n// Notification.propTypes = {\n//   message: PropTypes.string.isRequired,\n// };","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../../components/servisApi';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Section, Container, Heading } from './Home.styled';\nimport { Notification } from '../../components/Notification/Notification';\n// import { Loader } from 'components/Loader';\n\nconst Status = {\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nexport const Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.PENDING);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(({ results }) => {\n        if (!results.length) {\n          setStatus(Status.REJECTED);\n          setError(\n            \"Oops, something went wrong... We can't load trending movies ðŸ˜¥\"\n          );\n          return;\n        }\n        setMovies(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, []);\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <Heading>Trending today</Heading>\n          {/* {status === Status.PENDING && <Loader />} */}\n          {status === Status.REJECTED && <Notification message={error} />}\n          {status === Status.RESOLVED && <MovieList items={movies} />}\n        </Container>\n      </Section>\n    </main>\n  );\n};"],"names":["getTrendingMovies","axios","response","List","styled","ListItem","Item","NavLink","Poster","MovieInfo","MovieList","items","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultPicture","alt","Section","Container","Heading","Notification","Status","Home","useState","movies","setMovies","error","setError","status","setStatus","useEffect","then","results","length","catch","message"],"sourceRoot":""}