{"version":3,"file":"static/js/736.4a545cf4.chunk.js","mappings":"mRAEaA,EAAOC,EAAAA,GAAAA,GAAH,mVAwBJC,EAAYD,EAAAA,GAAAA,EAAH,+D,6BCmCtB,EAtDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAmCF,EAAAA,EAAAA,WAAS,GAA5C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,IAAS,WAAM,wCACb,8GAE+BC,EAAAA,EAAAA,IAAUV,GAFzC,UAI0C,KAFhCW,EAFV,QAIqBC,KAAKC,KAAKC,OAJ/B,uBAKMV,EAAcO,EAAaC,KAAKC,MAChCP,GAAc,GANpB,gCASIA,GAAc,GACdF,EAAc,IACR,IAAIW,MAAM,oBAXpB,kCAaIT,GAAc,GACdE,EAAS,EAAD,IACRJ,EAAc,IACdY,QAAQC,IAAR,MAhBJ,2DADa,sBAqBbX,GAAc,GArBA,WAAD,wBAsBbY,EACD,KAEC,+BACGb,IAAa,SAACc,EAAA,EAAD,IACbZ,IAAS,wBAAKA,EAAMa,UACE,IAAtBjB,EAAWW,SAAgB,SAACjB,EAAD,UACzBM,EAAWkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OAChB,2BACE,gBACEC,MAAO,IACPC,IAAKJ,EAAY,yCACyBA,GADzB,0EAIjBK,IAAKJ,KAEP,uBAAIA,KACJ,UAACzB,EAAD,yBAAuB0B,OAVhBH,EADO,QAiBvB,C,8CCrDD,IAJe,kBACX,0BAAK,SAAC,KAAD,KADM,C,mMCATO,EAAW,+BACXC,EAAW,mCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,EAApD,YADM,cACvBG,EADuB,yBAEtBA,GAFsB,2CAAH,qDAKvB,SAAgBC,EAAvB,+CAAO,OAAP,oBAAO,WAA4BlC,GAA5B,uFACoBgC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+B7B,EAA/B,oBAAkD8B,EAAlD,YADpB,cACGG,EADH,yBAEIA,GAFJ,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACoBJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,kBAA+DM,EAA/D,YADpB,cACGH,EADH,yBAEIA,GAFJ,kEAKA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBV,GAAzB,uFACoBgC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+B7B,EAA/B,4BAA0D8B,IAD9E,cACGG,EADH,yBAEIA,GAFJ,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BrC,GAA1B,uFACoBgC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+B7B,EAA/B,4BAA0D8B,IAD9E,cACGG,EADH,yBAEIA,GAFJ,kE","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Loader.jsx","components/servisApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  list-style: none;\n\n  li {\n    flex-basis: calc((100% - 7 * 16px) / 8);\n  }\n\n  img {\n    width: 140px;\n    height: 180px;\n    margin-bottom: 6px;\n    object-fit: cover;\n    border-radius: 3px;\n  }\n\n  p {\n    font-size: 12px;\n    margin: 0;\n  }\n`;\n\nexport const Character = styled.p`\n  margin-top: 4px;\n  color: #808080;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useMount } from 'react-use';\nimport { List, Character } from './Cast.styled';\nimport { getActors } from \"../../components/servisApi\";\nimport Loader from '../Loader'\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [filmActors, setFilmActors] = useState([]);\n  const [isLoading, setIsLoadings] = useState(false);\n  const [error, setError] = useState('');\n\n  useMount(() => {\n    async function getFilm() {\n      try {\n        const searchActors = await getActors(movieId)\n        \n        if (searchActors.data.cast.length !== 0) {\n          setFilmActors(searchActors.data.cast)\n          setIsLoadings(false)\n          return \n         }\n        setIsLoadings(false)\n        setFilmActors([])\n        throw new Error(\"Sory, no result!\");\n      } catch (error) {\n        setIsLoadings(false)\n        setError(error)\n        setFilmActors([])\n        console.log(error);\n      }\n    }\n\n    setIsLoadings(true)\n    getFilm()      \n  })\n  return (\n    <section>\n      {isLoading && <Loader />}\n      {error && <h2>{error.message}</h2>}\n      {filmActors.length !== 0 && <List>\n        {filmActors.map(({ id, profile_path, name, character }) => (\n        <li key={id}>\n          <img\n            width={100} \n            src={profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://www.meme-arsenal.com/memes/fefac21eda463aa9a307c7cfdbea1bee.jpg`\n                }\n            alt={name}\n          />\n          <p>{name}</p>\n          <Character>Character: {character}</Character>\n        </li>\n        ))}\n      </List>}\n    </section>\n  );\n};\n\nexport default Cast;","import { ThreeDots } from 'react-loader-spinner'\n\nconst Loader = () => (\n    <div><ThreeDots /></div>\n)\n\nexport default Loader;","import axios from 'axios'; \n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY =  '0f09f0e29eb26a1e28b4809ac59dbd60';\n\nexport const getTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`);\n    return response;\n    };\n\nexport async function  getMoviesID(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&page=1`);\n    return response;\n};\n\nexport async function getSearchFilms(searchFilm) {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchFilm}&page=1`);\n    return response;\n};\n\nexport async function getActors(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response;\n};\n\nexport async function getReviews(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response;\n};\n"],"names":["List","styled","Character","movieId","useParams","useState","filmActors","setFilmActors","isLoading","setIsLoadings","error","setError","useMount","getActors","searchActors","data","cast","length","Error","console","log","getFilm","Loader","message","map","id","profile_path","name","character","width","src","alt","BASE_URL","API_KEY","getTrendingMovies","axios","response","getMoviesID","getSearchFilms","searchFilm","getReviews"],"sourceRoot":""}